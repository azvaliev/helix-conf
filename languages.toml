[[language]]
name = "javascript"
language-servers = [ "vtsls-language-server", "eslint" ]

[[language]]
name = "jsx"
language-servers = [ "vtsls-language-server", "eslint" ]

[[language]]
name = "typescript"
language-servers = [ "vtsls-language-server", "eslint" ]

[[language]]
name = "tsx"
language-servers = [ "vtsls-language-server", "eslint" ]

# VTS LS

[language-server.vtsls-language-server]
command = "vtsls"
args = ["--stdio"]
config.hostInfo = "helix"

[language-server.vtsls-language-server.config.typescript.tsserver]
maxTsServerMemory = 16384

[language-server.vtsls-language-server.config.typescript.inlayHints]
parameterNames = "all"

# performance stuff
[language-server.vtsls-language-server.config.typescript.preferences]
autoImportFileExcludePatterns = [ "**/build/**", "**/out/**", "**/*.test.ts", "**/*.spec.ts" ]
includeCompletionsForModuleExports = false
includePackageJsonAutoImports = "off"
preferTypeOnlyAutoImports = true

# more performance stuff
[language-server.vtsls-language-server.config.vtsls.experimental.completion]
enableServerSideFuzzyMatch = true
entriesLimit = 50

# ESLint

[language-server.eslint]
args = ["--stdio"]
command = "vscode-eslint-language-server"

[language-server.eslint.config]
format = true
nodePath = ""
onIgnoredFiles = "off"
quiet = false
rulesCustomizations = []
run = "onType"
useESLintClass = false
validate = "on"
codeAction = { disableRuleComment = { enable = true, location = "separateLine" }, showDocumentation = { enable = true } }
codeActionOnSave = { mode = "all" }
experimental = { }
problems = { shortenToSingleLine = false }
workingDirectory = { mode = "auto" }

# Prettier

[language-server.efm-lsp-prettier]
command = "efm-langserver"

[language-server.efm-lsp-prettier.config]
documentFormatting = true

[language-server.efm-lsp-prettier.config.languages]
[[language-server.efm-lsp-prettier.config.languages.javascript]]
formatCommand = "prettier --stdin-filepath ${INPUT}"
formatStdin = true

[[language-server.efm-lsp-prettier.config.languages.javascriptreact]]
formatCommand = "prettier --stdin-filepath ${INPUT}"
formatStdin = true

[[language-server.efm-lsp-prettier.config.languages.json]]
formatCommand = "prettier --stdin-filepath ${INPUT}"
formatStdin = true

